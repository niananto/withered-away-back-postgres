CREATE OR REPLACE PROCEDURE insert_into_medicine (M_NAME varchar) AS $body$
DECLARE

	CURR_COUNT numeric;

BEGIN
	SELECT COUNT(*) INTO STRICT CURR_COUNT FROM MEDICINE M WHERE M.NAME LIKE M_NAME;
	IF CURR_COUNT = 0 THEN
		INSERT INTO MEDICINE(NAME) VALUES (M_NAME);
	END IF;
END;
$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE insert_into_medicine (M_NAME VARCHAR) FROM PUBLIC;





CREATE OR REPLACE PROCEDURE insert_into_disease (D_NAME VARCHAR) AS $body$
DECLARE

	CURR_COUNT NUMERIC;

BEGIN
	SELECT COUNT(*) INTO STRICT CURR_COUNT FROM DISEASE D WHERE D.NAME LIKE D_NAME;
	IF CURR_COUNT = 0 THEN
		INSERT INTO DISEASE(NAME) VALUES (D_NAME);
	END IF;
END;
$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE insert_into_disease (D_NAME VARCHAR) FROM PUBLIC;





CREATE OR REPLACE PROCEDURE insert_into_game (GSM_TITLE VARCHAR) AS $body$
DECLARE

	CURR_COUNT NUMERIC;

BEGIN
	SELECT COUNT(*) INTO STRICT CURR_COUNT FROM GAME GSM WHERE GSM.TITLE LIKE GSM_TITLE;
	IF CURR_COUNT = 0 THEN
		INSERT INTO GAME(TITLE) VALUES (GSM_TITLE);
	END IF;
END;
$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE insert_into_game (GSM_TITLE VARCHAR) FROM PUBLIC;





CREATE OR REPLACE PROCEDURE insert_into_movie (GSM_TITLE VARCHAR) AS $body$
DECLARE

	CURR_COUNT NUMERIC;

BEGIN
	SELECT COUNT(*) INTO STRICT CURR_COUNT FROM MOVIE GSM WHERE GSM.TITLE LIKE GSM_TITLE;
	IF CURR_COUNT = 0 THEN
		INSERT INTO MOVIE(TITLE) VALUES (GSM_TITLE);
	END IF;
END;
$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE insert_into_movie (GSM_TITLE VARCHAR) FROM PUBLIC;


CREATE OR REPLACE PROCEDURE insert_into_song (GSM_TITLE VARCHAR) AS $body$
DECLARE

	CURR_COUNT NUMERIC;

BEGIN
	SELECT COUNT(*) INTO STRICT CURR_COUNT FROM SONG GSM WHERE GSM.TITLE LIKE GSM_TITLE;
	IF CURR_COUNT = 0 THEN
		INSERT INTO SONG(TITLE) VALUES (GSM_TITLE);
	END IF;
END;
$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE insert_into_song (GSM_TITLE VARCHAR) FROM PUBLIC;





CREATE OR REPLACE PROCEDURE people_delete (P_ID NUMERIC) AS $body$
DECLARE

	C_ID NUMERIC;

BEGIN
	SELECT C.ID INTO STRICT C_ID FROM PEOPLE P JOIN CONNECTION CN ON P.ID=CN.PEOPLE_ID
	JOIN CONTACT C ON CN.CONTACT_ID=C.ID WHERE P.ID=P_ID;
	DELETE FROM PEOPLE WHERE ID=P_ID;
	DELETE FROM CONTACT WHERE ID=C_ID;
	RAISE NOTICE 'DONE';
EXCEPTION
	WHEN OTHERS THEN
		RAISE NOTICE 'ERROR';
END;
$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE people_delete (P_ID NUMERIC) FROM PUBLIC;

